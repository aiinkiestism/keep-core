name: Solidity

on:
  push:
    branches:
      # TODO: Run only on master after we're fully migrated from Circle CI
      - "rfc-18/**"
      - master
    paths:
      - "solidity/**"
      - "!solidity/dashboard/**"
      - ".github/workflows/contracts.yml"
  pull_request:
    branches:
      # TODO: Run on all branches after we're fully migrated from Circle CI
      - "rfc-18/**"
      - master
    paths:
      - "solidity/**"
      - "!solidity/dashboard/**"
      - ".github/workflows/contracts.yml"
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./solidity
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "12.x"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-solidity-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build solidity contracts
        run: npm run compile

      - name: Run tests
        run: npm run test

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./solidity
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "12.x"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-solidity-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  build-migrate-publish-contracts-and-initcontainer:
    needs: [build-and-test, lint]
    if: |
      startsWith(github.ref, 'refs/heads/releases/ropsten') 
        || startsWith(github.ref, 'refs/heads/rfc-18/ropsten')
    # TODO: Implement similiar for keep-dev (should execute for rfc-18/master branch)
    environment: keep-test 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # TODO: Create an action for migrating contracts and apply it instead below step
      - name: Migrate contracts
        env: 
          BUILD_TAG: $GITHUB_SHA
          GOOGLE_PROJECT_NAME: ${{ secrets.GOOGLE_PROJECT_NAME }}
          TRUFFLE_NETWORK: ${{ secrets.TRUFFLE_NETWORK }}
          ETH_NETWORK_ID: ${{ secrets.ETH_NETWORK_ID }}
          ETH_HOSTNAME: ${{ secrets.ETH_HOSTNAME }}
          TENDERLY_TOKEN: ${{ secrets.TENDERLY_TOKEN }}
          CONTRACT_OWNER_ETH_ACCOUNT_PRIVATE_KEY: ${{ secrets.CONTRACT_OWNER_ETH_ACCOUNT_PRIVATE_KEY }}
        run: solidity/scripts/circleci-migrate-contracts.sh

      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          service_account_key: ${{ secrets.KEEP_TEST_GCR_JSON_KEY }} # or GCLOUD_SERVICE_KEY?

      - name: Upload contract data
        env: 
          CONTRACT_DATA_BUCKET: ${{ secrets.CONTRACT_DATA_BUCKET }}
        run: |
          cd /tmp/keep-client/contracts
          gsutil -m cp * gs://"$CONTRACT_DATA_BUCKET"/keep-core 

      - run: |
          mkdir -p artifacts
          cp -r /tmp/keep-client/contracts/* artifacts/

      - name: Bump up package version
        uses: keep-network/npm-version-bump@v1

      - name: Publish to npm
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public
          dry-run: true # to be removed once testing of workflow is done

      - name: Copy contracts to initcontainer context folder
        run: |
          cp /tmp/keep-client/contracts/* \
            infrastructure/kube/templates/keep-client/initcontainer/provision-keep-client/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Google Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.GCR_REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.KEEP_TEST_GCR_JSON_KEY }}

      - name: Build and publish initcontainer
        uses: docker/build-push-action@v2
        env:
          IMAGE_NAME: 'initcontainer-provision-keep-client-wip' # TODO: change later to 'initcontainer-provision-keep-client'
          GOOGLE_PROJECT_ID: ${{ secrets.KEEP_TEST_GOOGLE_PROJECT_ID }}
        with:
          context: ./infrastructure/kube/templates/keep-client/initcontainer/provision-keep-client/
          # GCR image should be named according to following convention:
          # HOSTNAME/PROJECT-ID/IMAGE:TAG
          # We don't use TAG yet, will be added at later stages of work on RFC-18.
          tags: ${{ secrets.GCR_REGISTRY_URL }}/${{ env.GOOGLE_PROJECT_ID }}/${{ env.IMAGE_NAME }}
          labels: |
            revision=${{ github.sha }}
          push: true
          # add cache? if so, new actions/cache@v2 action would need to be configued
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache
